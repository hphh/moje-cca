<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cz.cca.her</groupId>
	<artifactId>moje-cca</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>

	<name>Moje CCA</name>

	<properties>
		<version.wildfly.swarm>2017.3.3</version.wildfly.swarm>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<version.querydsl>3.7.4</version.querydsl>

		<failOnMissingWebXml>false</failOnMissingWebXml>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom-all</artifactId>
				<version>${version.wildfly.swarm}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-apt</artifactId>
				<version>${version.querydsl}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${version.querydsl}</version>
			</dependency>

			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>12.1.0.1-atlassian-hosted</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.5</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>5.2.10.Final</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.9.9</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<npm.build>build</npm.build>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.swarm</groupId>
						<artifactId>wildfly-swarm-plugin</artifactId>
						<version>${version.wildfly.swarm}</version>
						<executions>
							<execution>
								<id>swarm-packaging</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.0</version>
						<executions>
							<!-- It will install nodejs and npm -->
							<execution>
								<id>install node and npm</id>
								<phase>none</phase>
							</execution>

							<!-- It will execute command "npm install" inside "/angular" directory -->
							<execution>
								<id>npm install</id>
								<phase>none</phase>
							</execution>

							<!-- It will execute command "npm build" inside "/angular" directory 
								to clean and create "/dist" directory -->
							<execution>
								<id>npm build</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>

					<!-- Plugin to copy the content of /angular/dist/ directory to output 
						directory (ie/ /target/transactionManager-1.0/) -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>default-copy-resources</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>


				</plugins>
			</build>
		</profile>

		<profile>
			<id>dev-complete-war</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<npm.build>build</npm.build>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.swarm</groupId>
						<artifactId>wildfly-swarm-plugin</artifactId>
						<version>${version.wildfly.swarm}</version>
						<executions>
							<execution>
								<id>swarm-packaging</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.0</version>
						<executions>
							<!-- It will install nodejs and npm -->
							<execution>
								<id>install node and npm</id>
								<phase>none</phase>
							</execution>

							<!-- It will execute command "npm install" inside "/angular" directory -->
							<execution>
								<id>npm install</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<npm.build>build-prod</npm.build>
			</properties>
		</profile>
	</profiles>


	<build>
		<finalName>${ArtifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
			</plugin>

			<!-- Plugin to execute command "npm install" and "npm run build" inside 
				/angular directory -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<workingDirectory>angular</workingDirectory>
					<installDirectory>temp</installDirectory>
				</configuration>
				<executions>
					<!-- It will install nodejs and npm -->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v8.2.1</nodeVersion>
							<npmVersion>5.3.0</npmVersion>
						</configuration>
					</execution>

					<!-- It will execute command "npm install" inside "/angular" directory -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<!-- It will execute command "npm build" inside "/angular" directory 
						to clean and create "/dist" directory -->
					<execution>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run ${npm.build}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin to copy the content of /angular/dist/ directory to output 
				directory (ie/ /target/transactionManager-1.0/) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<id>default-copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.build.directory}/${project.artifactId}/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/angular/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>wildfly-swarm-plugin</artifactId>
				<version>${version.wildfly.swarm}</version>
				<executions>
					<execution>
						<id>swarm-packaging</id>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>jsf</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
	</dependencies>


</project>
